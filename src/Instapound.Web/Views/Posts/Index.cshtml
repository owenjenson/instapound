@model Instapound.Web.Models.PostWithCommentsViewModel

@{
    ViewData["Title"] = $"{Model.Post.Author.Name}'s post | Instapound";
}

@await Html.PartialAsync("_PostListItem", Model.Post)

<section class="mt-8">
    <h4 class="font-semibold text-lg mb-2">Comments</h4>

    @await Html.PartialAsync("_NewComment", new NewCommentViewModel { PostId = Model.Post.Id.ToString(), Text = "" })

    <ul class="mt-8 flex flex-col gap-6">
        @foreach (var comment in Model.Comments)
        {
            <li>
                <article class="grid grid-rows-[auto_auto_auto] grid-cols-[auto_1fr] gap-x-4">
                    <a class="grid grid-cols-subgrid col-span-2 items-center group" asp-controller="Profile" asp-action="Index" asp-route-id="@comment.Author.Id.ToString()">
                        @{
                            var avatar = comment.Author.Avatar is null ?
                                "/images/avatars/default_avatar.png" :
                                $"/images/avatars/{comment.Author.Avatar}";
                        }

                        <img loading="lazy" class="cover aspect-square w-9 h-9 rounded-full p-0.5 border-2 border-primary" src="@avatar" />

                        <div>
                            <div class="flex gap-2 items-center">
                                <h5 class="font-semibold text-md mb-0 group-hover:underline">@comment.Author.Name</h5>
                                <small class="text-on-surface-muted">@@@comment.Author.UserName</small>
                            </div>

                            <span class="block mb-1 text-sm text-on-surface-muted">
                                @if (comment.CreatedAt.Date == DateTime.Today)
                                {
                                    <text>@comment.CreatedAt.ToShortTimeString()</text>
                                }
                                else
                                {
                                    <text>@comment.CreatedAt.ToShortDateString()</text>
                                }
                            </span>
                        </div>
                    </a>

                    <p class="col-start-2 mb-2">
                        @comment.Text
                    </p>

                    <div class="col-start-2 flex gap-2">
                        @await Html.PartialAsync("_LikeButton", new LikeButtonViewModel(comment.LikesCount, comment.Id, "/Comments/Like", comment.CurrentUserLikes))

                        @if (comment.CurrentUserIsAuthor)
                        {
                            <form asp-controller="Comments" asp-action="Remove" asp-route-id="@comment.Id" method="post">
                                <button class="btn btn-icon text-danger"
                                        type="submit"
                                        data-confirm="Are you sure you want to remove this comment?">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-danger h-3.5 w-3.5 lucide lucide-trash-2"><path d="M3 6h18" /><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" /><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" /><line x1="10" x2="10" y1="11" y2="17" /><line x1="14" x2="14" y1="11" y2="17" /></svg>
                                </button>
                            </form>
                        }
                    </div>
                </article>
            </li>
        }
    </ul>
</section>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}